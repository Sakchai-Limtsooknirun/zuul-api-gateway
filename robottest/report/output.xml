<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on darwin)" generated="20190627 14:19:43.104" rpa="false">
<suite id="s1" name="00 - Test Mock" source="/Users/supitcha/Documents/project/api-gateway/robottest/test case/00 - test_mock.robot">
<test id="s1-t1" name="TC01 Request to mock server case success">
<kw name="get header">
<arguments>
<arg>1234</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190627 14:19:43.197" level="TRACE">Arguments: [ ${token}='1234' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>token=${token}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190627 14:19:43.197" level="TRACE">Arguments: [ 'token=${token}' ]</msg>
<msg timestamp="20190627 14:19:43.197" level="TRACE">Return: {'token': '1234'}</msg>
<msg timestamp="20190627 14:19:43.197" level="INFO">${data} = {'token': '1234'}</msg>
<status status="PASS" starttime="20190627 14:19:43.197" endtime="20190627 14:19:43.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.197" level="TRACE">Arguments: [ {'token': '1234'} ]</msg>
<msg timestamp="20190627 14:19:43.197" level="INFO">{'token': '1234'}</msg>
<msg timestamp="20190627 14:19:43.197" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.197" endtime="20190627 14:19:43.198"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.198" level="TRACE">Arguments: [ '${data}' ]</msg>
<msg timestamp="20190627 14:19:43.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20190627 14:19:43.198" endtime="20190627 14:19:43.198"></status>
</kw>
<msg timestamp="20190627 14:19:43.198" level="TRACE">Return: {'token': '1234'}</msg>
<msg timestamp="20190627 14:19:43.198" level="INFO">${header} = {'token': '1234'}</msg>
<status status="PASS" starttime="20190627 14:19:43.196" endtime="20190627 14:19:43.198"></status>
</kw>
<kw name="get request from ${url}, ${uri} and ${header}">
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190627 14:19:43.198" level="TRACE">Arguments: [ ${url}='http://localhost:9999/mock' | ${uri}='/test' | ${header}={'token': '1234'} ]</msg>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.199" level="TRACE">Arguments: [ 'api' | 'http://localhost:9999/mock' ]</msg>
<msg timestamp="20190627 14:19:43.199" level="INFO">Creating Session using : alias=api, url=http://localhost:9999/mock, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20190627 14:19:43.199" level="DEBUG">Creating session: api</msg>
<msg timestamp="20190627 14:19:43.199" level="DEBUG">Argument types are:
&lt;class 'bool'&gt;</msg>
<msg timestamp="20190627 14:19:43.199" level="TRACE">Return: &lt;requests.sessions.Session object at 0x10dd787b8&gt;</msg>
<status status="PASS" starttime="20190627 14:19:43.198" endtime="20190627 14:19:43.199"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>api</arg>
<arg>${uri}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190627 14:19:43.199" level="TRACE">Arguments: [ 'api' | '/test' | headers={'token': '1234'} ]</msg>
<msg timestamp="20190627 14:19:43.204" level="DEBUG">Starting new HTTP connection (1): localhost:9999</msg>
<msg timestamp="20190627 14:19:43.213" level="DEBUG">http://localhost:9999 "GET /mock/test HTTP/1.1" 200 None</msg>
<msg timestamp="20190627 14:19:43.214" level="INFO">Get Request using : alias=api, uri=/test, headers={'token': '1234'} json=None</msg>
<msg timestamp="20190627 14:19:43.214" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20190627 14:19:43.214" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190627 14:19:43.199" endtime="20190627 14:19:43.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.214" level="TRACE">Arguments: [ {'status': {'code': 0, 'message': 'success'}} ]</msg>
<msg timestamp="20190627 14:19:43.214" level="INFO">{'status': {'code': 0, 'message': 'success'}}</msg>
<msg timestamp="20190627 14:19:43.214" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.214" endtime="20190627 14:19:43.214"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.214" level="TRACE">Arguments: [ '${res}' ]</msg>
<msg timestamp="20190627 14:19:43.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20190627 14:19:43.214" endtime="20190627 14:19:43.215"></status>
</kw>
<msg timestamp="20190627 14:19:43.215" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20190627 14:19:43.215" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190627 14:19:43.198" endtime="20190627 14:19:43.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20190627 14:19:43.215" level="TRACE">Arguments: [ 200 | '200' ]</msg>
<msg timestamp="20190627 14:19:43.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190627 14:19:43.215" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.215" endtime="20190627 14:19:43.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${res.json()}[status][code]</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190627 14:19:43.215" level="TRACE">Arguments: [ 0 | '0' ]</msg>
<msg timestamp="20190627 14:19:43.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190627 14:19:43.216" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.215" endtime="20190627 14:19:43.216"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${res.json()}[status][message]</arg>
<arg>success</arg>
</arguments>
<msg timestamp="20190627 14:19:43.216" level="TRACE">Arguments: [ 'success' | 'success' ]</msg>
<msg timestamp="20190627 14:19:43.216" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190627 14:19:43.216" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.216" endtime="20190627 14:19:43.216"></status>
</kw>
<status status="PASS" starttime="20190627 14:19:43.196" endtime="20190627 14:19:43.216" critical="yes"></status>
</test>
<test id="s1-t2" name="TC02 Request to mock server case fail">
<kw name="get header">
<arguments>
<arg>5678</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20190627 14:19:43.217" level="TRACE">Arguments: [ ${token}='5678' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>token=${token}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190627 14:19:43.217" level="TRACE">Arguments: [ 'token=${token}' ]</msg>
<msg timestamp="20190627 14:19:43.217" level="TRACE">Return: {'token': '5678'}</msg>
<msg timestamp="20190627 14:19:43.217" level="INFO">${data} = {'token': '5678'}</msg>
<status status="PASS" starttime="20190627 14:19:43.217" endtime="20190627 14:19:43.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.217" level="TRACE">Arguments: [ {'token': '5678'} ]</msg>
<msg timestamp="20190627 14:19:43.217" level="INFO">{'token': '5678'}</msg>
<msg timestamp="20190627 14:19:43.217" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.217" endtime="20190627 14:19:43.217"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.218" level="TRACE">Arguments: [ '${data}' ]</msg>
<msg timestamp="20190627 14:19:43.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20190627 14:19:43.217" endtime="20190627 14:19:43.218"></status>
</kw>
<msg timestamp="20190627 14:19:43.218" level="TRACE">Return: {'token': '5678'}</msg>
<msg timestamp="20190627 14:19:43.218" level="INFO">${header} = {'token': '5678'}</msg>
<status status="PASS" starttime="20190627 14:19:43.216" endtime="20190627 14:19:43.218"></status>
</kw>
<kw name="get request from ${url}, ${uri} and ${header}">
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190627 14:19:43.218" level="TRACE">Arguments: [ ${url}='http://localhost:9999/mock' | ${uri}='/test' | ${header}={'token': '5678'} ]</msg>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.218" level="TRACE">Arguments: [ 'api' | 'http://localhost:9999/mock' ]</msg>
<msg timestamp="20190627 14:19:43.218" level="INFO">Creating Session using : alias=api, url=http://localhost:9999/mock, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg timestamp="20190627 14:19:43.218" level="DEBUG">Creating session: api</msg>
<msg timestamp="20190627 14:19:43.219" level="DEBUG">Argument types are:
&lt;class 'bool'&gt;</msg>
<msg timestamp="20190627 14:19:43.219" level="TRACE">Return: &lt;requests.sessions.Session object at 0x10ee1eac8&gt;</msg>
<status status="PASS" starttime="20190627 14:19:43.218" endtime="20190627 14:19:43.219"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>api</arg>
<arg>${uri}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190627 14:19:43.219" level="TRACE">Arguments: [ 'api' | '/test' | headers={'token': '5678'} ]</msg>
<msg timestamp="20190627 14:19:43.220" level="DEBUG">Starting new HTTP connection (1): localhost:9999</msg>
<msg timestamp="20190627 14:19:43.225" level="DEBUG">http://localhost:9999 "GET /mock/test HTTP/1.1" 404 None</msg>
<msg timestamp="20190627 14:19:43.226" level="INFO">Get Request using : alias=api, uri=/test, headers={'token': '5678'} json=None</msg>
<msg timestamp="20190627 14:19:43.226" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20190627 14:19:43.226" level="INFO">${res} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20190627 14:19:43.219" endtime="20190627 14:19:43.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res.json()}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.227" level="TRACE">Arguments: [ {'status': {'code': 1, 'message': 'fail'}} ]</msg>
<msg timestamp="20190627 14:19:43.227" level="INFO">{'status': {'code': 1, 'message': 'fail'}}</msg>
<msg timestamp="20190627 14:19:43.227" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.226" endtime="20190627 14:19:43.227"></status>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<msg timestamp="20190627 14:19:43.227" level="TRACE">Arguments: [ '${res}' ]</msg>
<msg timestamp="20190627 14:19:43.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20190627 14:19:43.227" endtime="20190627 14:19:43.227"></status>
</kw>
<msg timestamp="20190627 14:19:43.227" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20190627 14:19:43.227" level="INFO">${res} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20190627 14:19:43.218" endtime="20190627 14:19:43.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${res.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20190627 14:19:43.228" level="TRACE">Arguments: [ 404 | '404' ]</msg>
<msg timestamp="20190627 14:19:43.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190627 14:19:43.228" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.227" endtime="20190627 14:19:43.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${res.json()}[status][code]</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20190627 14:19:43.228" level="TRACE">Arguments: [ 1 | '1' ]</msg>
<msg timestamp="20190627 14:19:43.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190627 14:19:43.228" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.228" endtime="20190627 14:19:43.228"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${res.json()}[status][message]</arg>
<arg>fail</arg>
</arguments>
<msg timestamp="20190627 14:19:43.229" level="TRACE">Arguments: [ 'fail' | 'fail' ]</msg>
<msg timestamp="20190627 14:19:43.229" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190627 14:19:43.229" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20190627 14:19:43.228" endtime="20190627 14:19:43.229"></status>
</kw>
<status status="PASS" starttime="20190627 14:19:43.216" endtime="20190627 14:19:43.229" critical="yes"></status>
</test>
<status status="PASS" starttime="20190627 14:19:43.105" endtime="20190627 14:19:43.229"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="00 - Test Mock">00 - Test Mock</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
